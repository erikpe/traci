<project default="jar">

  <property name="version" value="0.0.1" />

  <property name="src.dir" value="src" />
  <property name="build.dir" value="build" />
  <property name="lib.dir" value="lib" />
  <property name="tmp.dir" value="tmp" />
  <property name="test.src.dir" value="test" />
  <property name="test.build.dir" value="test.build" />
  <property name="test.output.dir" value="test.output" />
  <property name="test.report.dir" value="test.report" />
  <property name="scenes.dir" value="scenes" />
  <property name="images.dir" value="images" />

  <property name="antlr.dir" value="antlr-3.5" />
  <property name="antlr.jar" value="${lib.dir}/${antlr.dir}/antlr-3.5-complete-no-st3.jar" />
  <property name="antlr-runtime.jar" value="${lib.dir}/${antlr.dir}/antlr-runtime-3.5.jar" />
  <property name="antlr-runtime-sources.jar" value="${lib.dir}/${antlr.dir}/antlr-runtime-sources-3.5.jar" />

  <property name="commons-cli.dir" value="commons-cli-1.2" />
  <property name="commons-cli.jar" value="${lib.dir}/${commons-cli.dir}/commons-cli-1.2.jar" />
  <property name="commons-cli-sources.jar" value="${lib.dir}/${commons-cli.dir}/commons-cli-1.2-sources.jar" />

  <property name="anarres-cpp.dir" value="anarres-cpp-bin-1.2.8" />
  <property name="anarres-cpp.jar" value="${lib.dir}/${anarres-cpp.dir}/anarres-cpp-bin-1.2.8.jar" />
  <property name="anarres-cpp-sources.jar" value="${lib.dir}/${anarres-cpp.dir}/anarres-cpp-sources-1.2.8.jar" />

  <property name="junit.dir" value="junit-4.11" />
  <property name="junit.jar" value="${lib.dir}/${junit.dir}/junit-4.11.jar" />
  <property name="hamcrest.jar" value="${lib.dir}/${junit.dir}/hamcrest-core-1.3.jar" />

  <property name="jarfile" value="traci-${version}.jar" />
  <property name="src-distfile" value="traci-${version}.tar.gz" />

  <target name="clean">
    <delete file="${src.dir}/se/ejp/traci/lang/parser/TraciLexer.java" />
    <delete file="${src.dir}/se/ejp/traci/lang/parser/TraciParser.java" />
    <delete file="${src.dir}/se/ejp/traci/lang/parser/TraciTreeWalker.java" />
    <delete file="${src.dir}/se/ejp/traci/lang/parser/Traci.tokens" />
    <delete file="${src.dir}/se/ejp/traci/lang/parser/TraciTreeWalker.tokens" />
    <delete dir="${build.dir}" />
    <delete dir="${test.build.dir}" />
    <delete dir="${tmp.dir}" />
    <delete dir="${test.output.dir}" />
    <delete dir="${test.report.dir}" />
    <delete file="${jarfile}" />
    <delete file="${src-distfile}" />
  </target>

  <target name="generate-parser">
    <java jar="${antlr.jar}" fork="true">
      <arg value="-verbose" />
      <arg value="-make" />
      <arg value="-fo" />
      <arg value="${src.dir}/se/ejp/traci/lang/parser" />
      <arg value="${src.dir}/se/ejp/traci/lang/grammar/Traci.g" />
      <arg value="${src.dir}/se/ejp/traci/lang/grammar/TraciTreeWalker.g" />
    </java>
  </target>

  <target name="compile" depends="generate-parser">
    <mkdir dir="${build.dir}" />
    <javac srcdir="${src.dir}" destdir="${build.dir}" includeantruntime="false">
      <classpath>
        <pathelement location="${antlr-runtime.jar}" />
        <pathelement location="${commons-cli.jar}" />
        <pathelement location="${anarres-cpp.jar}" />
      </classpath>
    </javac>
  </target>

  <target name="compile-tests" depends="compile">
    <mkdir dir="${test.build.dir}" />
    <javac srcdir="${test.src.dir}" destdir="${test.build.dir}" includeantruntime="false">
      <classpath>
        <pathelement location="${build.dir}" />
        <pathelement location="${antlr-runtime.jar}" />
        <pathelement location="${commons-cli.jar}" />
        <pathelement location="${anarres-cpp.jar}" />
        <pathelement location="${junit.jar}" />
      </classpath>
    </javac>
  </target>

  <target name="unpack-libs">
    <delete dir="${tmp.dir}" />
    <unjar src="${antlr-runtime.jar}" dest="${tmp.dir}/${antlr.dir}">
      <patternset>
        <include name="org/antlr/runtime/**" />
      </patternset>
    </unjar>
    <unjar src="${antlr-runtime-sources.jar}" dest="${tmp.dir}/${antlr.dir}">
      <patternset>
        <include name="org/antlr/runtime/**" />
      </patternset>
    </unjar>
    <unjar src="${commons-cli.jar}" dest="${tmp.dir}/${commons-cli.dir}">
      <patternset>
        <include name="org/apache/commons/cli/**" />
      </patternset>
    </unjar>
    <unjar src="${commons-cli-sources.jar}" dest="${tmp.dir}/${commons-cli.dir}">
      <patternset>
        <include name="org/apache/commons/cli/**" />
      </patternset>
    </unjar>
    <unjar src="${anarres-cpp.jar}" dest="${tmp.dir}/${anarres-cpp.dir}">
      <patternset>
        <include name="org/anarres/**" />
      </patternset>
    </unjar>
    <unjar src="${anarres-cpp-sources.jar}" dest="${tmp.dir}/${anarres-cpp.dir}">
      <patternset>
        <include name="org/anarres/**" />
      </patternset>
    </unjar>
  </target>

  <target name="jar" depends="compile, unpack-libs">
    <jar destfile="${jarfile}">
      <fileset dir="${build.dir}" />
      <fileset dir="${src.dir}" />
      <fileset dir="${tmp.dir}/${antlr.dir}" />
      <fileset dir="${tmp.dir}/${commons-cli.dir}" />
      <fileset dir="${tmp.dir}/${anarres-cpp.dir}" />
      <manifest>
        <attribute name="Main-Class" value="se.ejp.traci.main.Main" />
      </manifest>
    </jar>
  </target>

  <target name="src-dist">
    <tar destfile="${src-distfile}" compression="gzip">
      <tarfileset dir="." prefix="traci-${version}">
        <include name="${src.dir}/" />
        <include name="${test.src.dir}/" />
        <include name="${scenes.dir}/" />
        <include name="${images.dir}/" />
        <include name="${lib.dir}/" />
        <include name="build.xml" />
        <include name="README" />
        <include name="COPYING" />
      </tarfileset>
    </tar>
  </target>

  <target name="run-tests" depends="compile, compile-tests">
    <delete dir="${test.output.dir}" />
    <mkdir dir="${test.output.dir}" />
    <junit failureProperty="test.failure" printsummary="yes" haltonfailure="no" showoutput="no">
      <classpath>
        <pathelement location="${build.dir}" />
        <pathelement location="${test.build.dir}" />
        <pathelement location="${antlr-runtime.jar}" />
        <pathelement location="${commons-cli.jar}" />
        <pathelement location="${anarres-cpp.jar}" />
        <pathelement location="${hamcrest.jar}" />
        <pathelement location="${junit.jar}" />
      </classpath>
      <formatter type="xml" />
      <batchtest todir="${test.output.dir}">
        <fileset dir="${test.src.dir}" includes="**/*Test.java" />
      </batchtest>
    </junit>
  </target>

  <target name="test-report" depends="run-tests">
    <mkdir dir="${test.report.dir}" />
    <junitreport todir="${test.output.dir}">
      <fileset dir="${test.output.dir}">
        <include name="TEST-*.xml" />
      </fileset>
      <report format="frames" todir="${test.report.dir}" />
    </junitreport>
  </target>

  <target name="test" depends="test-report">
    <concat>
      <fileset file="${test.report.dir}/overview-summary.html" />
      <filterchain>
        <linecontainsregexp>
          <regexp pattern='title="Display all tests"' />
        </linecontainsregexp>
        <tokenfilter>
          <replaceregex pattern='.*"all-tests.html"&gt;(\d+).*"alltests-fails.html"&gt;(\d+).*"alltests-errors.html"&gt;(\d+).*' replace="Tests run: \1, Failed: \2, Errors: \3" />
        </tokenfilter>
      </filterchain>
    </concat>
    <fail message="Failed test(s)" if="test.failure" />
  </target>

</project>
