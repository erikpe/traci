(define epsilon 0.001)
(define pi 3.1415926535898)

(define (peg . args)
  (cylinder
   (scale .15 .1 .15)
   (translate .25 .6 .25)
   (apply insert args)))

(define (hole . args)
  (cylinder
   (scale .15 (+ (* 2 epsilon) .5) .15)
   (rotx (/ 3.1415926535898 2))
   (translate .5 .3 (- epsilon))
   (apply insert args)))

(define (lego pegs . args)
  (union
   (difference
    (box (scale (/ pegs 2.0) .6 .5))
    (loop i 0 (- pegs 2)
          (hole (translate (* i .5) 0 0))))
   (loop i 0 (- pegs 1)
         (peg (translate (* i .5) 0 0)))
   (apply insert args)))

(define (lego2 pegs)
  (union
    (loop i 0 (- pegs 2)
      (hole (translate (* i .5) 0 0)))))
      
(define (round-cube x y z r)
  (let ((r2 (* 2 r)))
    (union
      (box (scale x (- y r2) (- z r2))
           (translate 0 r r))
      (box (scale (- x r2) y (- z r2))
           (translate r 0 r))
      (box (scale (- x r2) (- y r2) z)
           (translate r r 0))
      (cylinder r (vec r (- y r) (- z r))
                  (vec (- x r) (- y r) (- z r))))))
       